name: Reflex Docs Automation

on:
  schedule:
    - cron: '0 */2 * * *' # Runs every 2 hours
  workflow_dispatch: # Allows manual triggering of the workflow

env:
  PYTHON_EXEC: /home/ubuntu/.pyenv/versions/3.12.10/bin/python

jobs:
  update-docs:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.10'

      - name: Install dependencies
        run: |
          ${{ env.PYTHON_EXEC }} -m pip install --upgrade pip
          ${{ env.PYTHON_EXEC }} -m pip install -r requirements.txt
          ${{ env.PYTHON_EXEC }} -m playwright install

      - name: Run automation script
        run: ${{ env.PYTHON_EXEC }} haupt.py

      - name: Update README with last checked time
        run: |
          echo "Attempting to update Last checked time in README.md"
          current_time_str="$(TZ='Europe/Berlin' date '+%Y-%m-%d %H:%M:%S %Z')"
          NEW_TIME_STRING="- Last checked: \`$current_time_str\`"
          
          # Apply sed to README.md
          sed -i "s|^- Last checked: <!-- LAST_CHECKED_PLACEHOLDER -->|${NEW_TIME_STRING}|g" README.md
          sed -i "s|^- Last checked: \`.*\`|${NEW_TIME_STRING}|g" README.md
          echo "Sed commands for 'Last checked' executed."

          # Stage ONLY README.md for this specific commit
          git add README.md
          echo "Staged potential changes in README.md"

          # Check if README.md has staged changes to be committed
          if ! git diff --cached --quiet README.md; then
            echo "README.md has staged changes for 'Last checked'. Committing it."
            git commit -m "Update last checked time in README" README.md 
            
            echo "Pulling with rebase before pushing 'Last checked' time update..."
            # At this point, if reflex_docs.txt was modified by haupt.py, it's an unstaged
            # working directory change. This is usually fine for 'git pull --rebase'
            # unless it directly conflicts with incoming changes. The error "index contains
            # uncommitted changes" should now be resolved.
            if ! git pull --rebase origin main; then
              echo "::error::git pull --rebase failed for 'Last checked' time update. Please check runner state or resolve conflicts if any."
              exit 1
            fi
            
            echo "Pushing 'Last checked' time update..."
            git push https://unfortunatelyalex:${{ secrets.PAT }}@github.com/unfortunatelyalex/reflex-docs.git main
            if [ $? -ne 0 ]; then
              echo "::error::Failed to push 'Last checked' time update. Please check PAT permissions and branch protection rules."
              exit 1
            fi
            echo "'Last checked' time update pushed successfully."
          else
            echo "No new changes to commit for 'Last checked' time in README.md (already up-to-date or no changes made by sed)."
          fi
          # Changes to reflex_docs.txt (if any from haupt.py) remain as working directory
          # modifications. They will be detected by the 'Check for changes' step (which uses
          # 'git diff --exit-code') and then staged and committed by the
          # 'Commit and push changes' step.

      - name: Check for changes
        id: check_changes
        run: |
          if ! git diff --exit-code; then
            echo "Changes found."
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes found."
            echo "changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          echo "Attempting to update Last updated time in README.md"
          NEW_UPDATED_TIME_STRING="- Last updated: \`$(TZ='Europe/Berlin' date '+%Y-%m-%d %H:%M:%S %Z')\`"

          # First, try to replace the placeholder specifically
          sed -i "s|^- Last updated: <!-- LAST_UPDATED_PLACEHOLDER -->|${NEW_UPDATED_TIME_STRING}|g" README.md
          
          # Then, try to replace an existing backticked timestamp
          sed -i "s|^- Last updated: \`.*\`|${NEW_UPDATED_TIME_STRING}|g" README.md
          
          echo "Sed commands for 'Last updated' executed."
          
          echo "Staging all changes including README.md and reflex_docs.txt..."
          git add . # This adds reflex_docs.txt (if changed) and the updated README.md

          if ! git diff --cached --quiet; then
            echo "Changes staged. Committing..."
            git commit -m "Update merged Reflex documentation and README timestamps"
            
            echo "Pulling with rebase before pushing all changes..."
            if ! git pull --rebase origin main; then
              echo "::error::git pull --rebase failed for final commit. Please check runner state or resolve conflicts if any."
              exit 1
            fi

            echo "Pushing all changes..."
            git push https://unfortunatelyalex:${{ secrets.PAT }}@github.com/unfortunatelyalex/reflex-docs.git main
            if [ $? -ne 0 ]; then
              echo "::error::Failed to push 'Update merged Reflex documentation'. Please check PAT permissions and branch protection rules."
              exit 1
            fi
            echo "All changes pushed successfully."
          else
            echo "No new changes were staged for commit."
          fi